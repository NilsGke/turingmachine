.App {
    text-align: center;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: auto 200px auto;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    padding: 5%;
}

#stripContainer {
    grid-area: 1 / 1 / 2 / 3;
    #strip {
        $width: 80%;
        width: $width;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 60px calc((100% - $width) / 2);
        padding: 20px 20px;
        &:has(.delete) {
            padding: 50px 20px;
        }
        border-radius: 20px;
        background: #252525;
        .cell {
            display: flex;
            align-items: center;
            justify-content: center;
            $size: 60px;
            max-width: $size;
            height: $size;
            border-radius: 10px;

            // &:has(> .delete) {
            //     // styles for if edit mode is active
            // }

            input,
            button {
                width: 100%;
                height: 100%;
                background: #3b3b3b;
                border: none;
                border-radius: 10px;
                text-align: center;
                font-size: 20px;
                display: flex;
                align-items: center;
                justify-content: center;
                z-index: 1;

                &.delete {
                    height: 30px;
                    width: 30px;
                    position: absolute;
                    cursor: pointer;
                    opacity: 0;
                    animation: moveDown 0.5s ease-out forwards;
                    z-index: 0;
                    path {
                        color: #ff5151 !important;
                    }
                    @keyframes moveDown {
                        from {
                            translate: 0 0px;
                            opacity: 0;
                        }
                        30% {
                            opacity: 0;
                        }
                        to {
                            translate: 0 calc($size - 10px);
                            opacity: 1;
                        }
                    }
                }
            }

            > div.move {
                opacity: 0;
                position: absolute;
                $height: 30px;
                height: $height;
                width: $size;
                display: flex;
                flex-direction: row;

                button {
                    $margin: 1px;
                    width: calc(50% - ($margin * 2));
                    height: calc($height - ($margin * 2));
                    border: none;
                    color: yellow;
                    margin: $margin;
                    cursor: pointer;
                }

                animation: moveUp 0.5s ease-out forwards;
                @keyframes moveUp {
                    from {
                        translate: 0 0px;
                        opacity: 0;
                    }
                    30% {
                        opacity: 0;
                    }
                    to {
                        translate: 0 calc(-1 * $size / 2 - $height / 2 - 3px);
                        opacity: 1;
                    }
                }
            }

            // has to be nth 2 because first is the plus button
            &:nth-child(2) > div.move {
                flex-direction: row-reverse;
            }

            // animation with delay
            $max: 100;
            @for $i from 1 through $max {
                &:nth-child(#{$i}n) :is(button.delete, div.move) {
                    animation-delay: #{$i * 0.04}s;
                }
            }

            &:is(.active) {
                outline: 2px solid aqua;
            }
            &.button {
                height: calc($size * 0.8);
                width: calc($size * 0.8);
                input {
                    transition: all 0.2s ease-in-out;
                    background-color: transparent;
                    color: #63ff6b;
                    font-size: 30px;
                    cursor: pointer;
                    &:hover {
                        color: white;
                    }
                }
            }
            &#editButtonContainer {
                $factor: 0.8;
                position: absolute;
                right: calc($size * $factor * -1.5);
                width: calc($size * $factor);
                height: calc($size * $factor);
                border-radius: 100px;
                button {
                    cursor: pointer;
                    border-radius: 100px;
                    svg {
                        path {
                            stroke: #f5ff69;
                        }
                        polyline {
                            stroke: lime;
                        }
                    }
                }
            }
        }
    }
    $size: 15px;
    #head {
        display: block;
        position: absolute;
        width: 0;
        height: 0;
        // code for triangle
        // border-left: $size solid transparent;
        // border-right: $size solid transparent;
        // border-bottom: $size solid #63ff6b;
        top: 0;
        left: 0;
        z-index: 20;
        transition: all 0.4s ease-in-out;
    }

    // rounded triangle from: https://stackoverflow.com/questions/14446677/how-to-make-3-corner-rounded-triangle-in-css#:~:text=127-,My%20best%20attempt
    #head {
        position: absolute;
        background-color: orange;
        text-align: left;
    }
    #head:before,
    #head:after {
        content: "";
        position: absolute;
        background-color: inherit;
    }
    #head,
    #head:before,
    #head:after {
        width: $size;
        height: $size;
        border-top-right-radius: 30%;
    }

    #head {
        transform: rotate(-60deg) skewX(-30deg) scale(1, 0.866);
    }
    #head:before {
        transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707)
            translate(0, -50%);
    }
    #head:after {
        transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414)
            translate(50%);
    }
}

#program {
    grid-area: 2 / 2 / 4 / 3;
    div#list {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        gap: 4px;
        .step {
            border-radius: 20px;
            padding: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #252525;
            .current,
            .new {
                display: inline-block;
                select,
                input {
                    min-height: 35px;
                    min-width: 35px;
                    font-size: 18px;
                    text-align: center;
                    margin: 10px;
                    max-width: 50px;
                    // remove arrow
                    background-color: #3b3b3b;
                    -webkit-appearance: none;
                    -moz-appearance: none;
                    text-indent: 1px;
                    text-overflow: "";
                    border: none;
                    padding: 3px;
                    border-radius: 10px;
                    &:is(select) {
                        cursor: pointer;
                    }
                }
            }
            textarea {
                height: 40px;
                border: none;
                font-family: "Segoe UI", Arial, Helvetica, sans-serif;
                font-size: 14px;
                resize: none;
                min-width: 50px;
                max-width: 50px;
                overflow: show;
                border-radius: 10px;
                background-color: #3b3b3b;
                text-align: center;
                &::-webkit-scrollbar {
                    display: none;
                }
                -ms-overflow-style: none;
                scrollbar-width: none;
                transition: min-width 0.5s ease-in-out;
                &.big,
                &:focus {
                    min-width: 200px;
                }
            }
            div.buttons {
                margin-left: 10px;
                display: flex;
                justify-content: center;
                align-items: center;
                flex-direction: column;
                flex-wrap: nowrap;
                button {
                    background-color: transparent;
                    border: none;
                    width: 30px;
                    height: 30px;
                    cursor: pointer;
                    &.delete svg {
                        height: 100%;
                        width: 100%;
                        path {
                            color: #ff5151;
                        }
                    }
                }
            }
            &.add {
                display: flex;
                align-items: center;
                justify-content: center;
                text-align: center;
                background-color: transparent;
                button {
                    font-size: 30px;
                    color: #63ff6b;
                    background-color: transparent;
                    border: none;
                    cursor: pointer;
                }
            }
        }
    }
}

#controlsContainer {
    grid-area: 2 / 1 / 3 / 2;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    $gap: 10px;
    gap: $gap;
    div {
        background: #252525;
        padding: 20px;
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: $gap;
    }

    button {
        display: flex;
        align-items: center;
        justify-content: center;

        border: none;
        padding: 10px;
        font-size: 24px;
        border-radius: 10px;
        background: #3b3b3b;
        cursor: pointer;
        color: white;
        transition: all 0.2s ease-in-out;
        > svg > path {
            stroke: white;
        }
        &:disabled {
            cursor: auto;
            background: #2c2c2c;
            color: grey;
        }
    }
}

#statesContainer {
    grid-area: 3 / 1 / 4 / 2;
    #states {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        width: 100%;
        #list {
            width: 100%;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
            $gap: 5px;
            gap: $gap;
            padding: 20px;
            .state {
                $padding: 20px;
                width: min-content;
                // 3.1 is dirty but it does not put three next to each other if its just 3
                max-width: calc(100% / 3.1 - ($padding * 2));
                min-width: calc(180px - $padding * 2);
                background: #252525;
                padding: $padding;
                border-radius: 20px;
                gap: $gap;
                display: flex;
                flex-direction: row;
                flex-wrap: nowrap;
                justify-content: space-around;

                &.current {
                    outline: 2px solid #0ff;
                }

                input,
                textarea {
                    border-radius: 10px;
                    border: none;
                    background: #3b3b3b;
                }

                // THINK IF YOU NEED THE NOTE THINGY
                textarea {
                    display: none;
                }

                input {
                    font-size: 20px;
                    width: 50px;
                    // padding-left: 10px;
                    text-align: center;
                }
                button.delete {
                    max-width: 25px;
                    padding: 0;
                    svg {
                        height: 100%;
                        width: 100%;
                        path {
                            transition: all 0.2s ease-out;
                            color: #8a8a8a;
                        }
                    }
                    &:hover {
                        svg path {
                            color: #ff5151;
                        }
                    }
                }
            }
        }
    }
    button {
        background: transparent;
        border: none;
        color: #63ff6b;
        font-size: 30px;
        cursor: pointer;
    }
}
